apiVersion: openinfradev.github.com/v1
kind: HelmValuesTransformer
metadata:
  name: site

global:
  dbHost: ${DATABASE_HOST}
  commonPassword: ${COMMON_PASSWORD}
  storageClass: ${STORAGE_CLASS}
  storageClassHa: ${STORAGE_CLASS_HA}


charts:
  - name: keycloak
    override:
      replicaCount: 3
      global.storageClass: $(storageClass)
      auth.adminPassword: $(commonPassword)
      ingress.enabled: true
      ingress.tls: false
      ingress.hostname: TO_BE_FIXED
      ingress.ingressClassName: "f5"
      ingress.annotations:
        ingress.kubernetes.io/allow-http: "false"
        ingress.kubernetes.io/ssl-redirect: "true"
        virtual-server.f5.com/clientssl: '[ { "hosts": [ "skbroadband.com" ], "bigIpProfile":
            "/Common/skbroadband" } ]'
        virtual-server.f5.com/health: |
          [
            {
              "path":     "TO_BE_FIXED",
              "send":     "HTTP GET /",
              "interval": 5,
              "timeout":  10
            }
          ]
        virtual-server.f5.com/ip: TO_BE_FIXED
        virtual-server.f5.com/partition: TO_BE_FIXED
      externalDatabase.host: $(dbHost)
      externalDatabase.password: $(commonPassword)

  - name: tks-apis
    override:
      gitBaseUrl: https://github.com
      gitAccount: decapod10
      db:
        dbHost: $(dbHost)
        adminPassword: $(commonPassword)
        dbUser: tksuser
        dbPassword: $(commonPassword)
      tksapi:
        replicaCount: 1
        tksAccount:
          password: $(commonPassword)
        image:
          repository: harbor.taco-cat.xyz/tks/tks-api
          pullPolicy: Always
          tag: v3.1.0
        args:
          kubeconfigPath: ""

          externalGiteaUrl: TO_BE_FIXED

          keycloakAddress: http://keycloak.keycloak.svc.cluster.local/auth
          keycloakAdmin: admin
          keycloakPassword: $(commonPassword)

          mailProvider: smtp
          smtpHost: TO_BE_FIXED
          smtpPort: TO_BE_FIXED
          smtpUsername: TO_BE_FIXED
          smtpPassword: TO_BE_FIXED
          smtpFromEmail: TO_BE_FIXED

      tksbatch:
        replicaCount: 1
        image:
          repository: harbor.taco-cat.xyz/tks/tks-batch
          pullPolicy: Always
          tag: v3.1.0
        args:
          tksApiPassword: $(commonPassword)
      tksconsole:
        replicaCount: 1
        image:
          repository: harbor.taco-cat.xyz/tks/tks-console
          pullPolicy: Always
          tag: v3.1.0

  - name: harbor
    override:
      ipFamily:
        ipv6:
          enabled: false
      expose:
        tls:
          enabled: false
        ingress:
          annotations:
            ingress.kubernetes.io/allow-http: "false"
            ingress.kubernetes.io/ssl-redirect: "true"
            virtual-server.f5.com/clientssl: '[ { "hosts": [ "skbroadband.com" ], "bigIpProfile":
                "/Common/skbroadband" } ]'
            virtual-server.f5.com/health: |
              [
                {
                  "path":     "TO_BE_FIXED",
                  "send":     "HTTP GET /",
                  "interval": 5,
                  "timeout":  10
                }
              ]
            virtual-server.f5.com/ip: TO_BE_FIXED
            virtual-server.f5.com/partition: TO_BE_FIXED
          hosts:
            core: TO_BE_FIXED
          className: "f5"
      externalURL: TO_BE_FIXED
      persistence:
        persistentVolumeClaim:
          registry:
            storageClass: $(storageClassHa)
            accessMode: ReadWriteMany
            size: 200Gi
          chartmuseum:
            storageClass: $(storageClassHa)
            accessMode: ReadWriteMany
            size: 20Gi
          jobservice:
            jobLog:
              storageClass: $(storageClassHa)
              accessMode: ReadWriteMany
            scanDataExports:
              storageClass: $(storageClassHa)
              accessMode: ReadWriteMany
          redis:
            storageClass: $(storageClass)
            accessMode: ReadWriteOnce
          trivy:
            storageClass: $(storageClass)
      database:
        type: external
        external:
          host: $(dbHost)
          password: $(commonPassword)
          sslmode: "require"
      core:
        replicas: 2
      jobservice:
        replicas: 2
      registry:
        replicas: 2
      chartmuseum:
        replicas: 2
      trivy:
        replicas: 2
      portal:
        replicas: 2
      harborAdminPassword: $(commonPassword)

  - name: ingress-nginx
    override:
      controller:
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
        service:
          externalTrafficPolicy: Local
          type: NodePort
        config:
          enable-underscores-in-headers: "true"
          proxy-body-size: "10m"
